{"version":3,"sources":["components/Title.js","components/NavBar.js","components/Table.js","components/HomeContent.js","components/Info.js","components/HabitList.js","components/HabitsContent.js","components/StatsContent.js","App.js","serviceWorker.js","index.js"],"names":["Title","class","this","props","title","Component","NavBar","href","onClick","e","preventDefault","onChangeMode","bind","Table","habitList","tdList","dateList","habits","data","i","push","type","length","key","HomeContent","Info","HabitList","list","className","HabitsContent","StatsContent","App","state","subject","sub","mode","article","_mode","setState","getContent","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"sPAeeA,G,6KAXT,OACE,gCACE,uBAAGC,MAAM,gCACT,4BAAKC,KAAKC,MAAMC,OAChB,+EAAoD,6BAApD,sC,GANUC,cCuBLC,E,uKArBT,OACE,6BACI,4BACI,4BAAI,uBAAGC,KAAK,QAAQC,QAAS,SAASC,GACpCA,EAAEC,iBACFR,KAAKC,MAAMQ,aAAa,SACxBC,KAAKV,OAHH,SAIJ,4BAAI,uBAAGK,KAAK,UAAUC,QAAS,SAASC,GACtCA,EAAEC,iBACFR,KAAKC,MAAMQ,aAAa,WACxBC,KAAKV,OAHH,WAIJ,4BAAI,uBAAGK,KAAK,SAASC,QAAS,SAASC,GACrCA,EAAEC,iBACFR,KAAKC,MAAMQ,aAAa,UACxBC,KAAKV,OAHH,gB,GAbCG,aC+BNQ,E,uKAtBP,IAPA,IAAIC,EAAY,GACZC,EAAS,GACTC,EAAW,GACXC,EAASf,KAAKC,MAAMe,KAGpBC,EAAI,EACDA,GAHa,IAIhBJ,EAAOK,KAAK,4BAAI,2BAAOC,KAAK,eAC5BL,EAASI,KAAK,4BAAKD,IACnBA,IAIJ,IADAA,EAAI,EACGA,EAAIF,EAAOK,QACdR,EAAUM,KAAK,wBAAIG,IAAKN,EAAOE,IAAKF,EAAOE,GAAIJ,IAC/CI,IAGJ,OACI,+BACI,sCACCH,EACAF,O,GAzBGT,aCWLmB,E,uKART,OACE,iCACE,kBAAC,EAAD,CAAON,KAAMhB,KAAKC,MAAMe,Y,GAJRb,aCOXoB,E,uKANT,OACE,kE,GAHWpB,aC0BJqB,E,uKArBP,IAHA,IAAIC,EAAO,GACPV,EAASf,KAAKC,MAAMe,KACpBC,EAAI,EACDA,EAAIF,EAAOK,QACdK,EAAKP,KACD,wBAAIG,IAAKN,EAAOE,IACXF,EAAOE,GACR,8BACI,0BAAMS,UAAU,eACZ,uBAAG3B,MAAM,iBAEb,0BAAM2B,UAAU,iBAAhB,QAGZT,IAEJ,OACI,wBAAIS,UAAU,cACTD,O,GApBOtB,aCWTwB,E,uKART,OACE,iCACE,kBAAC,EAAD,CAAWX,KAAMhB,KAAKC,MAAMe,Y,GAJVb,aCObyB,E,uKANT,OACE,8C,GAHmBzB,aC6CZ0B,E,kDArCb,WAAY5B,GAAQ,IAAD,8BACjB,cAAMA,IACD6B,MAAQ,CACXC,QAAS,CAAE7B,MAAO,oBAAqB8B,IAAK,oBAC5CC,KAAM,OACNlB,OAAQ,CAAC,eAAgB,uBALV,E,yDAUjB,IAAImB,EAUJ,MATwB,SAApBlC,KAAK8B,MAAMG,KACbC,EAAU,kBAAC,EAAD,CAAalB,KAAMhB,KAAK8B,MAAMf,SAEb,WAApBf,KAAK8B,MAAMG,KAClBC,EAAU,kBAAC,EAAD,CAAelB,KAAMhB,KAAK8B,MAAMf,SAEf,UAApBf,KAAK8B,MAAMG,OAClBC,EAAU,kBAAC,EAAD,OAELA,I,+BAIP,OACE,yBAAKR,UAAU,OACb,kBAAC,EAAD,CAAOxB,MAAOF,KAAK8B,MAAMC,QAAQ7B,QACjC,kBAAC,EAAD,CAAQO,aAAc,SAAS0B,GAC7BnC,KAAKoC,SAAS,CAACH,KAAME,KACrBzB,KAAKV,QACNA,KAAKqC,aACN,kBAAC,EAAD,W,GAhCUlC,aCGEmC,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2DCZNC,IAASC,OACP,kBAAC,IAAMC,WAAP,KACE,kBAAC,EAAD,OAEFC,SAASC,eAAe,SDyHpB,kBAAmBC,WACrBA,UAAUC,cAAcC,MACrBC,MAAK,SAAAC,GACJA,EAAaC,gBAEdC,OAAM,SAAAC,GACLC,QAAQD,MAAMA,EAAME,a","file":"static/js/main.7431f069.chunk.js","sourcesContent":["import React, { Component } from 'react';\r\n\r\nclass Title extends Component {\r\n    render() {\r\n      return (\r\n        <header>\r\n          <i class=\"far fa-calendar-check fa-2x\"></i>\r\n          <h1>{this.props.title}</h1>\r\n          <p>Just another free, fully responsive site template<br></br>\r\nbuilt by @ajlkn for HTML5 UP.</p>\r\n        </header>\r\n      );\r\n    }\r\n}\r\n\r\nexport default Title;","import React, { Component } from 'react';\r\n\r\nclass NavBar extends Component {\r\n    render() {\r\n      return (\r\n        <nav>\r\n            <ul>\r\n                <li><a href=\"/home\" onClick={function(e){\r\n                  e.preventDefault();\r\n                  this.props.onChangeMode('home');\r\n                }.bind(this)}>home</a></li>\r\n                <li><a href=\"/habits\" onClick={function(e){\r\n                  e.preventDefault();\r\n                  this.props.onChangeMode('habits');\r\n                }.bind(this)}>habits</a></li>\r\n                <li><a href=\"/stats\" onClick={function(e){\r\n                  e.preventDefault();\r\n                  this.props.onChangeMode('stats');\r\n                }.bind(this)}>stats</a></li>\r\n            </ul>\r\n        </nav>\r\n      );\r\n    }\r\n}\r\n\r\nexport default NavBar;","import React, { Component } from 'react';\r\n\r\nclass Table extends Component {\r\n    render() {\r\n        var habitList = [];\r\n        var tdList = [];\r\n        var dateList = [];\r\n        var habits = this.props.data;\r\n        var DAYS_IN_MONTH = 31;\r\n\r\n        var i = 1;\r\n        while (i <= DAYS_IN_MONTH) {\r\n            tdList.push(<td><input type='checkbox'></input></td>);\r\n            dateList.push(<td>{i}</td>);\r\n            i++;\r\n        }\r\n\r\n        i = 0;\r\n        while (i < habits.length) {\r\n            habitList.push(<tr key={habits[i]}>{habits[i]}{tdList}</tr>);\r\n            i++;\r\n        }\r\n\r\n        return (\r\n            <table>\r\n                <th>Habits</th>\r\n                {dateList}\r\n                {habitList}\r\n            </table>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Table;","import React, { Component } from 'react';\r\nimport Table from './Table';\r\n\r\nclass HomeContent extends Component {\r\n    render() {\r\n      return (\r\n        <article>\r\n          <Table data={this.props.data}></Table>\r\n        </article>\r\n      );\r\n    }\r\n}\r\n\r\nexport default HomeContent;","import React, { Component } from 'react';\r\n\r\nclass Info extends Component {\r\n    render() {\r\n      return (\r\n        <footer>informaiton. / contact me.</footer>\r\n      );\r\n    }\r\n}\r\n\r\nexport default Info;","import React, { Component } from 'react';\r\n\r\nclass HabitList extends Component {\r\n    render() {\r\n        var list = [];\r\n        var habits = this.props.data;\r\n        var i = 0;\r\n        while (i < habits.length) {\r\n            list.push(\r\n                <li key={habits[i]}>\r\n                    {habits[i]}\r\n                    <span>\r\n                        <span className='edit-button'>\r\n                            <i class=\"far fa-edit\"></i>\r\n                        </span>\r\n                        <span className='delete-button'>x</span>\r\n                    </span>\r\n                </li>);\r\n            i++;\r\n        }\r\n        return (\r\n            <ul className='habit_list'>\r\n                {list}\r\n            </ul>\r\n        );\r\n    }\r\n}\r\n\r\nexport default HabitList;","import React, { Component } from 'react';\r\nimport HabitList from './HabitList';\r\n\r\nclass HabitsContent extends Component {\r\n    render() {\r\n      return (\r\n        <article>\r\n          <HabitList data={this.props.data}></HabitList>\r\n        </article>\r\n      );\r\n    }\r\n}\r\n\r\nexport default HabitsContent;","import React, { Component } from 'react';\r\n\r\nclass StatsContent extends Component {\r\n    render() {\r\n      return (\r\n        <article>stats</article>\r\n      );\r\n    }\r\n}\r\n\r\nexport default StatsContent;","import React, { Component } from 'react';\nimport './App.scss';\nimport Title from './components/Title';\nimport NavBar from './components/NavBar';\nimport HomeContent from './components/HomeContent';\nimport Info from './components/Info';\nimport HabitsContent from './components/HabitsContent';\nimport StatsContent from './components/StatsContent';\n\nclass App extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      subject: { title: 'The Habit Tracker', sub: 'make good habits'},\n      mode: 'home',\n      habits: ['1day 1commit', 'workout 30 minutes']\n    }\n  }\n\n  getContent() {\n    var article;\n    if (this.state.mode === 'home') {\n      article = <HomeContent data={this.state.habits}></HomeContent>\n    }\n    else if (this.state.mode === 'habits') {\n      article = <HabitsContent data={this.state.habits}></HabitsContent>\n    }\n    else if (this.state.mode === 'stats') {\n      article = <StatsContent></StatsContent>\n    }\n    return article;\n  }\n\n  render () {\n    return (\n      <div className=\"App\">\n        <Title title={this.state.subject.title}></Title>\n        <NavBar onChangeMode={function(_mode){\n          this.setState({mode: _mode});\n        }.bind(this)}></NavBar>\n        {this.getContent()}\n        <Info></Info>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}